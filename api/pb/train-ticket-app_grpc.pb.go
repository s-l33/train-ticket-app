// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v4.25.0
// source: pb/train-ticket-app.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	TrainTicketApp_PurchaseTicket_FullMethodName    = "/pb.TrainTicketApp/PurchaseTicket"
	TrainTicketApp_GetReceiptDetails_FullMethodName = "/pb.TrainTicketApp/GetReceiptDetails"
	TrainTicketApp_GetUsersBySection_FullMethodName = "/pb.TrainTicketApp/GetUsersBySection"
	TrainTicketApp_RemoveUser_FullMethodName        = "/pb.TrainTicketApp/RemoveUser"
	TrainTicketApp_ModifyUserSeat_FullMethodName    = "/pb.TrainTicketApp/ModifyUserSeat"
)

// TrainTicketAppClient is the client API for TrainTicketApp service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type TrainTicketAppClient interface {
	PurchaseTicket(ctx context.Context, in *PurchaseTicketRequest, opts ...grpc.CallOption) (*PurchaseTicketResponse, error)
	GetReceiptDetails(ctx context.Context, in *GetReceiptDetailsRequest, opts ...grpc.CallOption) (*GetReceiptDetailsResponse, error)
	GetUsersBySection(ctx context.Context, in *GetUsersBySectionRequest, opts ...grpc.CallOption) (*GetUsersBySectionResponse, error)
	RemoveUser(ctx context.Context, in *RemoveUserRequest, opts ...grpc.CallOption) (*RemoveUserResponse, error)
	ModifyUserSeat(ctx context.Context, in *ModifyUserSeatRequest, opts ...grpc.CallOption) (*ModifyUserSeatResponse, error)
}

type trainTicketAppClient struct {
	cc grpc.ClientConnInterface
}

func NewTrainTicketAppClient(cc grpc.ClientConnInterface) TrainTicketAppClient {
	return &trainTicketAppClient{cc}
}

func (c *trainTicketAppClient) PurchaseTicket(ctx context.Context, in *PurchaseTicketRequest, opts ...grpc.CallOption) (*PurchaseTicketResponse, error) {
	out := new(PurchaseTicketResponse)
	err := c.cc.Invoke(ctx, TrainTicketApp_PurchaseTicket_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *trainTicketAppClient) GetReceiptDetails(ctx context.Context, in *GetReceiptDetailsRequest, opts ...grpc.CallOption) (*GetReceiptDetailsResponse, error) {
	out := new(GetReceiptDetailsResponse)
	err := c.cc.Invoke(ctx, TrainTicketApp_GetReceiptDetails_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *trainTicketAppClient) GetUsersBySection(ctx context.Context, in *GetUsersBySectionRequest, opts ...grpc.CallOption) (*GetUsersBySectionResponse, error) {
	out := new(GetUsersBySectionResponse)
	err := c.cc.Invoke(ctx, TrainTicketApp_GetUsersBySection_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *trainTicketAppClient) RemoveUser(ctx context.Context, in *RemoveUserRequest, opts ...grpc.CallOption) (*RemoveUserResponse, error) {
	out := new(RemoveUserResponse)
	err := c.cc.Invoke(ctx, TrainTicketApp_RemoveUser_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *trainTicketAppClient) ModifyUserSeat(ctx context.Context, in *ModifyUserSeatRequest, opts ...grpc.CallOption) (*ModifyUserSeatResponse, error) {
	out := new(ModifyUserSeatResponse)
	err := c.cc.Invoke(ctx, TrainTicketApp_ModifyUserSeat_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TrainTicketAppServer is the server API for TrainTicketApp service.
// All implementations must embed UnimplementedTrainTicketAppServer
// for forward compatibility
type TrainTicketAppServer interface {
	PurchaseTicket(context.Context, *PurchaseTicketRequest) (*PurchaseTicketResponse, error)
	GetReceiptDetails(context.Context, *GetReceiptDetailsRequest) (*GetReceiptDetailsResponse, error)
	GetUsersBySection(context.Context, *GetUsersBySectionRequest) (*GetUsersBySectionResponse, error)
	RemoveUser(context.Context, *RemoveUserRequest) (*RemoveUserResponse, error)
	ModifyUserSeat(context.Context, *ModifyUserSeatRequest) (*ModifyUserSeatResponse, error)
	mustEmbedUnimplementedTrainTicketAppServer()
}

// UnimplementedTrainTicketAppServer must be embedded to have forward compatible implementations.
type UnimplementedTrainTicketAppServer struct {
}

func (UnimplementedTrainTicketAppServer) PurchaseTicket(context.Context, *PurchaseTicketRequest) (*PurchaseTicketResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PurchaseTicket not implemented")
}
func (UnimplementedTrainTicketAppServer) GetReceiptDetails(context.Context, *GetReceiptDetailsRequest) (*GetReceiptDetailsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetReceiptDetails not implemented")
}
func (UnimplementedTrainTicketAppServer) GetUsersBySection(context.Context, *GetUsersBySectionRequest) (*GetUsersBySectionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUsersBySection not implemented")
}
func (UnimplementedTrainTicketAppServer) RemoveUser(context.Context, *RemoveUserRequest) (*RemoveUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveUser not implemented")
}
func (UnimplementedTrainTicketAppServer) ModifyUserSeat(context.Context, *ModifyUserSeatRequest) (*ModifyUserSeatResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ModifyUserSeat not implemented")
}
func (UnimplementedTrainTicketAppServer) mustEmbedUnimplementedTrainTicketAppServer() {}

// UnsafeTrainTicketAppServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to TrainTicketAppServer will
// result in compilation errors.
type UnsafeTrainTicketAppServer interface {
	mustEmbedUnimplementedTrainTicketAppServer()
}

func RegisterTrainTicketAppServer(s grpc.ServiceRegistrar, srv TrainTicketAppServer) {
	s.RegisterService(&TrainTicketApp_ServiceDesc, srv)
}

func _TrainTicketApp_PurchaseTicket_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PurchaseTicketRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TrainTicketAppServer).PurchaseTicket(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: TrainTicketApp_PurchaseTicket_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TrainTicketAppServer).PurchaseTicket(ctx, req.(*PurchaseTicketRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TrainTicketApp_GetReceiptDetails_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetReceiptDetailsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TrainTicketAppServer).GetReceiptDetails(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: TrainTicketApp_GetReceiptDetails_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TrainTicketAppServer).GetReceiptDetails(ctx, req.(*GetReceiptDetailsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TrainTicketApp_GetUsersBySection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUsersBySectionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TrainTicketAppServer).GetUsersBySection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: TrainTicketApp_GetUsersBySection_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TrainTicketAppServer).GetUsersBySection(ctx, req.(*GetUsersBySectionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TrainTicketApp_RemoveUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TrainTicketAppServer).RemoveUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: TrainTicketApp_RemoveUser_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TrainTicketAppServer).RemoveUser(ctx, req.(*RemoveUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TrainTicketApp_ModifyUserSeat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModifyUserSeatRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TrainTicketAppServer).ModifyUserSeat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: TrainTicketApp_ModifyUserSeat_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TrainTicketAppServer).ModifyUserSeat(ctx, req.(*ModifyUserSeatRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// TrainTicketApp_ServiceDesc is the grpc.ServiceDesc for TrainTicketApp service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var TrainTicketApp_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "pb.TrainTicketApp",
	HandlerType: (*TrainTicketAppServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PurchaseTicket",
			Handler:    _TrainTicketApp_PurchaseTicket_Handler,
		},
		{
			MethodName: "GetReceiptDetails",
			Handler:    _TrainTicketApp_GetReceiptDetails_Handler,
		},
		{
			MethodName: "GetUsersBySection",
			Handler:    _TrainTicketApp_GetUsersBySection_Handler,
		},
		{
			MethodName: "RemoveUser",
			Handler:    _TrainTicketApp_RemoveUser_Handler,
		},
		{
			MethodName: "ModifyUserSeat",
			Handler:    _TrainTicketApp_ModifyUserSeat_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pb/train-ticket-app.proto",
}
